@using INV.Domain.Entities.Receipts
<EditForm Model="ReceiptInfo" OnInvalidSubmit="Create" FormName="hello">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    @if (ReceiptInfo != null)
    {
        <div class="details-container">
            <div class="details-grid">
                <div class="detail-item">
                    <span class="detail-label">Purchase Number</span>
                    <span class="detail-value number">@ReceiptInfo.purchaseNumber</span>
                </div>

                <div class="detail-item">
                    <span class="detail-label">Delivery Number</span>
                    <InputText @bind-Value="@ReceiptInfo.DeliveryNumber" class="date-input" disabled="@statusInput"/>
                    <ValidationMessage For="() => ReceiptInfo.DeliveryNumber"/>
                </div>

                <div class="detail-item">
                    <span class="detail-label">Supplier Name</span>
                    <span class="detail-value">@ReceiptInfo.supplierName</span>
                </div>

                <div class="detail-item">
                    <span class="detail-label">Delivery Date</span>
                    <InputDate @bind-Value="@ReceiptInfo.DeliveryDate" class="date-input" disabled="@statusInput"/>
                    <ValidationMessage For="() => ReceiptInfo.DeliveryDate"/>
                </div>


                <div class="detail-item">
                    <span class="detail-label">Status</span>
                    <span class="status-badge editing"> @ReceiptInfo.Status</span>
                </div>

                <div class="detail-item">
                    <span class="detail-label">Documents</span>
                    <InputFile class="file-upload" disabled="@statusInput"/>
                </div>

            </div>
        </div>
    }


    @if (ReceiptInfo.ReceiptProducts != null)
    {
        <div class="Container-list">
            <RadzenDataGrid Data="@products" AllowSorting="true" AllowFiltering="true" Style="width: 100%;">
                <Columns>
                    <RadzenDataGridColumn Property="@nameof(ReceiptProductModel.Designation)" Title="Designation"/>
                    <RadzenDataGridColumn Property="@nameof(ReceiptProductModel.Quantity)" Title="Quantity"/>
                    <RadzenDataGridColumn Title="Rest">
                        <Template Context="product">
                            @(product.Quantity)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Property="@nameof(ReceiptProductModel.Quantity)" Title="Received">
                        <Template Context="product">
                            <InputNumber @bind-Value="product.Received" disabled="@statusInput"/>
                        </Template>
                    </RadzenDataGridColumn>

                </Columns>
            </RadzenDataGrid>
        </div>

        <div class="footer-form" style="display: flex; flex-direction: row-reverse;">
            @if (ReceiptInfo.Status == ReceiptStatus.validated)
            {
            }
            else if (ReceiptInfo.Status == ReceiptStatus.editing)
            {
                @if (statusInput)
                {
                    <button type="submit" class="btn-custom btn-submit" @onclick="Validate">Valider</button>
                    <button type="button" class="btn-custom btn-cancel" @onclick="StartEditing">Modifier</button>
                }
                else
                {
                    <button type="button" class="btn-custom btn-submit" @onclick="SaveChanges">Enregistrer</button>
                    <button type="button" class="btn-custom btn-cancel" @onclick="CancelEditing">Annuler</button>
                }
            }


        </div>
    }
</EditForm>
<style>
 

   

    


    .table-container {
        width: 100%;
        overflow-x: auto;
        margin: 20px 0;
    }

    .reception-table {
        width: 100%;
        border-collapse: collapse;
        background-color: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

        .reception-table th {
            background-color: #3498db;
            color: white;
            padding: 12px 15px;
            text-align: left;
            font-weight: 600;
        }

        .reception-table td {
            padding: 10px 15px;
            border-bottom: 1px solid #ecf0f1;
        }

    .input-received {
        width: 80px;
        padding: 5px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 0.9em;
    }

        .input-received:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 5px rgba(52, 152, 219, 0.3);
        }


    .details-container {
        padding: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .details-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 5px;
        align-items: center;
    }

    .detail-item {
        display: flex;
        flex-direction: column;
    }

    .detail-label {
        font-size: 0.9em;
        color: #2c3e50;
        font-weight: 600;
    }

    .detail-value {
        font-size: 1.2em;
        font-weight: bold;
        color: #34495e;
    }

    .date-input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .file-upload {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }

    .status-badge {
        font-size: 1em;
        font-weight: bold;
        display: flex;
        align-items: center;
    }

        .status-badge.editing {
            color: #FD8B51;
        }

        .status-badge::before {
            content: '●';
            font-size: 1.2em;
            margin-right: 5px;
        }

</style>